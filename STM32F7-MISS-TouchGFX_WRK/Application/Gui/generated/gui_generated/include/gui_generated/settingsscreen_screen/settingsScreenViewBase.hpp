/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTINGSSCREEN_VIEW_BASE_HPP
#define SETTINGSSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/settingsscreen_screen/settingsScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class settingsScreenViewBase : public touchgfx::View<settingsScreenPresenter>
{
public:
    settingsScreenViewBase();
    virtual ~settingsScreenViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void incBrightness()
    {
        // Override and implement this function in settingsScreenView
    }

    virtual void decBrightness()
    {
        // Override and implement this function in settingsScreenView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::Image image;
    touchgfx::ToggleButton toggleButton1;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger > homeBtn;
    touchgfx::IconButtonStyle< touchgfx::RepeatButtonTrigger > incBtn;
    touchgfx::IconButtonStyle< touchgfx::RepeatButtonTrigger > decBtn;
    touchgfx::TextAreaWithOneWildcard brightnessValue;
    touchgfx::TextArea textArea1;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger > workBtn;

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<settingsScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<settingsScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

};

#endif // SETTINGSSCREEN_VIEW_BASE_HPP
