/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
{
    box1.setPosition(0, 0, 640, 480);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    homeBtn.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_HOME_48_ID), Bitmap(BITMAP_BLUE_ICONS_HOME_48_ID));
    homeBtn.setIconXY(0, 0);
    homeBtn.setPosition(8, 424, 48, 48);
    homeBtn.setVisible(false);
    homeBtn.setAction(flexButtonCallback);

    settingsBtn.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_SETTINGS_48_ID), Bitmap(BITMAP_BLUE_ICONS_SETTINGS_48_ID));
    settingsBtn.setIconXY(0, 0);
    settingsBtn.setText(TypedText(T_SINGLEUSEID58));
    settingsBtn.setTextPosition(25, 6, 200, 48);
    settingsBtn.setTextColors(touchgfx::Color::getColorFrom24BitRGB(10, 10, 10), touchgfx::Color::getColorFrom24BitRGB(8, 224, 27));
    settingsBtn.setPosition(200, 424, 200, 48);
    settingsBtn.setAction(flexButtonCallback);

    textArea1.setXY(12, 12);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(TypedText(T_SINGLEUSEID8));

    textArea1_1.setXY(44, 55);
    textArea1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(TypedText(T_SINGLEUSEID9));

    textArea1_1_1.setXY(275, 55);
    textArea1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1_1.setLinespacing(0);
    textArea1_1_1.setTypedText(TypedText(T_SINGLEUSEID10));

    textArea1_1_1_1.setXY(471, 55);
    textArea1_1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1_1_1.setLinespacing(0);
    textArea1_1_1_1.setTypedText(TypedText(T_SINGLEUSEID11));

    actualPressure.setPosition(83, 118, 74, 32);
    actualPressure.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
    actualPressure.setLinespacing(0);
    Unicode::snprintf(actualPressureBuffer, ACTUALPRESSURE_SIZE, "%s", TypedText(T_SINGLEUSEID34).getText());
    actualPressure.setWildcard(actualPressureBuffer);
    actualPressure.setTypedText(TypedText(T_SINGLEUSEID12));

    actualFlowLPM.setPosition(302, 118, 65, 32);
    actualFlowLPM.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
    actualFlowLPM.setLinespacing(0);
    Unicode::snprintf(actualFlowLPMBuffer, ACTUALFLOWLPM_SIZE, "%s", TypedText(T_SINGLEUSEID15).getText());
    actualFlowLPM.setWildcard(actualFlowLPMBuffer);
    actualFlowLPM.setTypedText(TypedText(T_SINGLEUSEID14));

    actualFlowRPM.setPosition(486, 118, 74, 32);
    actualFlowRPM.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
    actualFlowRPM.setLinespacing(0);
    Unicode::snprintf(actualFlowRPMBuffer, ACTUALFLOWRPM_SIZE, "%s", TypedText(T_SINGLEUSEID17).getText());
    actualFlowRPM.setWildcard(actualFlowRPMBuffer);
    actualFlowRPM.setTypedText(TypedText(T_SINGLEUSEID16));

    stopBtn.setXY(529, 371);
    stopBtn.setBitmaps(Bitmap(BITMAP_STOP_ID), Bitmap(BITMAP_STOP_DISABLED_ID));
    stopBtn.setAction(buttonCallback);

    startBtn.setXY(505, 347);
    startBtn.setBitmaps(Bitmap(BITMAP_START_ID), Bitmap(BITMAP_START_DISABLED_ID));
    startBtn.setAction(buttonCallback);

    textArea1_1_2.setXY(53, 189);
    textArea1_1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1_2.setLinespacing(0);
    textArea1_1_2.setTypedText(TypedText(T_SINGLEUSEID21));

    textArea1_1_1_2.setXY(275, 189);
    textArea1_1_1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1_1_2.setLinespacing(0);
    textArea1_1_1_2.setTypedText(TypedText(T_SINGLEUSEID22));

    textArea1_1_1_1_1.setXY(474, 189);
    textArea1_1_1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1_1_1_1.setLinespacing(0);
    textArea1_1_1_1_1.setTypedText(TypedText(T_SINGLEUSEID23));

    presetlPressure.setPosition(83, 253, 74, 32);
    presetlPressure.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));
    presetlPressure.setLinespacing(0);
    Unicode::snprintf(presetlPressureBuffer, PRESETLPRESSURE_SIZE, "%s", TypedText(T_SINGLEUSEID25).getText());
    presetlPressure.setWildcard(presetlPressureBuffer);
    presetlPressure.setTypedText(TypedText(T_SINGLEUSEID24));

    presetFlowLPM.setXY(302, 253);
    presetFlowLPM.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));
    presetFlowLPM.setLinespacing(0);
    Unicode::snprintf(presetFlowLPMBuffer, PRESETFLOWLPM_SIZE, "%s", TypedText(T_SINGLEUSEID27).getText());
    presetFlowLPM.setWildcard(presetFlowLPMBuffer);
    presetFlowLPM.resizeToCurrentText();
    presetFlowLPM.setTypedText(TypedText(T_SINGLEUSEID26));

    presetFlowRPM.setPosition(486, 253, 74, 32);
    presetFlowRPM.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 0));
    presetFlowRPM.setLinespacing(0);
    Unicode::snprintf(presetFlowRPMBuffer, PRESETFLOWRPM_SIZE, "%s", TypedText(T_SINGLEUSEID29).getText());
    presetFlowRPM.setWildcard(presetFlowRPMBuffer);
    presetFlowRPM.setTypedText(TypedText(T_SINGLEUSEID28));

    decPressure.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID), Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID));
    decPressure.setIconXY(0, 0);
    decPressure.setPosition(19, 253, 50, 32);
    decPressure.setAction(flexButtonCallback);

    incPressure.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID), Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID));
    incPressure.setIconXY(0, 0);
    incPressure.setPosition(170, 253, 50, 32);
    incPressure.setAction(flexButtonCallback);

    decFlow.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID), Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID));
    decFlow.setIconXY(0, 0);
    decFlow.setPosition(424, 253, 50, 32);
    decFlow.setAction(flexButtonCallback);

    incFlow.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID), Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID));
    incFlow.setIconXY(0, 0);
    incFlow.setPosition(572, 253, 50, 32);
    incFlow.setAction(flexButtonCallback);

    mcuLoad.setPosition(586, 0, 54, 20);
    mcuLoad.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    mcuLoad.setLinespacing(0);
    mcuLoadBuffer[0] = 0;
    mcuLoad.setWildcard(mcuLoadBuffer);
    mcuLoad.setTypedText(TypedText(T_SINGLEUSEID39));

    textArea3.setXY(486, 0);
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(TypedText(T_SINGLEUSEID40));

    diagBtn.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_48_ID), Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_48_ID));
    diagBtn.setIconXY(0, 0);
    diagBtn.setPosition(72, 424, 48, 48);
    diagBtn.setVisible(false);

    levelBtn.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_USER_48_ID), Bitmap(BITMAP_BLUE_ICONS_USER_48_ID));
    levelBtn.setIconXY(0, 0);
    levelBtn.setText(TypedText(T_SINGLEUSEID57));
    levelBtn.setTextPosition(20, 6, 150, 48);
    levelBtn.setTextColors(touchgfx::Color::getColorFrom24BitRGB(10, 10, 10), touchgfx::Color::getColorFrom24BitRGB(8, 224, 27));
    levelBtn.setPosition(12, 424, 150, 48);

    textArea1_1_2_1.setXY(12, 327);
    textArea1_1_2_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1_2_1.setLinespacing(0);
    textArea1_1_2_1.setTypedText(TypedText(T_SINGLEUSEID61));

    textArea1_1_2_1_1.setXY(12, 361);
    textArea1_1_2_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1_1_2_1_1.setLinespacing(0);
    textArea1_1_2_1_1.setTypedText(TypedText(T_SINGLEUSEID62));

    actualTemp.setXY(228, 327);
    actualTemp.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    actualTemp.setLinespacing(0);
    Unicode::snprintf(actualTempBuffer, ACTUALTEMP_SIZE, "%s", TypedText(T_SINGLEUSEID64).getText());
    actualTemp.setWildcard(actualTempBuffer);
    actualTemp.resizeToCurrentText();
    actualTemp.setTypedText(TypedText(T_SINGLEUSEID63));

    errorStats.setPosition(157, 361, 182, 20);
    errorStats.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    errorStats.setLinespacing(0);
    Unicode::snprintf(errorStatsBuffer1, ERRORSTATSBUFFER1_SIZE, "%s", TypedText(T_SINGLEUSEID68).getText());
    errorStats.setWildcard1(errorStatsBuffer1);
    Unicode::snprintf(errorStatsBuffer2, ERRORSTATSBUFFER2_SIZE, "%s", TypedText(T_SINGLEUSEID67).getText());
    errorStats.setWildcard2(errorStatsBuffer2);
    errorStats.setTypedText(TypedText(T_SINGLEUSEID65));

    alarmWindow.setXY(0, 0);
    alarmWindow.setBackground(BitmapId(BITMAP_MISS_LOGO_640PX_ID), 0, 139);
    alarmWindow.setShadeColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    alarmWindow.setShadeAlpha(192);
    alarmWindow.hide();

    box2.setPosition(-15, -5, 666, 213);
    box2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 246, 0));
    alarmWindow.add(box2);

    textArea4.setXY(23, 18);
    textArea4.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(TypedText(T_SINGLEUSEID60));
    alarmWindow.add(textArea4);

    stopBtnAlarm.setXY(536, 98);
    stopBtnAlarm.setBitmaps(Bitmap(BITMAP_STOP_ID), Bitmap(BITMAP_STOP_DISABLED_ID));
    stopBtnAlarm.setAction(buttonCallback);
    alarmWindow.add(stopBtnAlarm);

    add(box1);
    add(homeBtn);
    add(settingsBtn);
    add(textArea1);
    add(textArea1_1);
    add(textArea1_1_1);
    add(textArea1_1_1_1);
    add(actualPressure);
    add(actualFlowLPM);
    add(actualFlowRPM);
    add(stopBtn);
    add(startBtn);
    add(textArea1_1_2);
    add(textArea1_1_1_2);
    add(textArea1_1_1_1_1);
    add(presetlPressure);
    add(presetFlowLPM);
    add(presetFlowRPM);
    add(decPressure);
    add(incPressure);
    add(decFlow);
    add(incFlow);
    add(mcuLoad);
    add(textArea3);
    add(diagBtn);
    add(levelBtn);
    add(textArea1_1_2_1);
    add(textArea1_1_2_1_1);
    add(actualTemp);
    add(errorStats);
    add(alarmWindow);
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &stopBtn)
    {
        //stopRegulation
        //When stopBtn clicked call virtual function
        //Call stopRegulation
        stopRegulation();
    }
    else if (&src == &startBtn)
    {
        //startRegulation
        //When startBtn clicked call virtual function
        //Call startRegulation
        startRegulation();
    }
    else if (&src == &stopBtnAlarm)
    {
        //Interaction1
        //When stopBtnAlarm clicked call virtual function
        //Call stopRegulation
        stopRegulation();
    }
}

void MainViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &homeBtn)
    {
        //home
        //When homeBtn clicked change screen to Boot
        //Go to Boot with screen transition towards West
        application().gotoBootScreenSlideTransitionWest();
    }
    else if (&src == &settingsBtn)
    {
        //settings
        //When settingsBtn clicked change screen to Settings
        //Go to Settings with screen transition towards East
        application().gotoSettingsScreenSlideTransitionEast();
    }
    else if (&src == &decPressure)
    {
        //decPressure
        //When decPressure clicked call virtual function
        //Call decPressureBtn
        decPressureBtn();
    }
    else if (&src == &incPressure)
    {
        //incPressure
        //When incPressure clicked call virtual function
        //Call incPressureBtn
        incPressureBtn();
    }
    else if (&src == &decFlow)
    {
        //decFlow
        //When decFlow clicked call virtual function
        //Call decFlowBtn
        decFlowBtn();
    }
    else if (&src == &incFlow)
    {
        //incFlow
        //When incFlow clicked call virtual function
        //Call incFlowBtn
        incFlowBtn();
    }
    else if (&src == &diagBtn)
    {

    }
    else if (&src == &levelBtn)
    {

    }
}
